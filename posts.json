[
	{
		"id": "be49d7851372d54993af097ecc3be40a",
		"title": "Pluggable storage backends",
		"content": "We want to support multiple storage backends, at least `json` (continuing to support the current data), `sqlite` (or `sql` in general, as the driver is general anyway?). and maybe we can even support `datomic`, which would make Lucas very happy!\r\n\r\n## What do we need?\r\n\r\n- store posts (create, update, delete, list)\r\n- store users (or at least it should be clear how to add support for users)\r\n\r\nOptional/fun:\r\n\r\n- search/querying (by date, reversed, by title, by matching title, by content, ...)\r\n\r\n## How could the interface look like?\r\n\r\n```go\r\n// storage_json is the package with the json backend\r\nstorage := storage_json.Open(\"posts.json\")\r\n\r\n// finding and updating posts\r\ntheAnswer, err := storage.FindPostById(\"42\")\r\ntheAnswer.Content = \"42\"\r\n\r\nerr = storage.Save(theAnswer)\r\n\r\n// creating posts\r\nnewPost := Post{/* ... */}\r\nerr = storage.Save(newPost) // maybe .Create?\r\n\r\n// maybe?\r\nstorage.Reload() // == storage_json.Open(\"...\") ??\r\n```\r\n\r\n## Questions\r\n\r\n- how do we \"coordinate\" ids for new posts?\r\n    \r\n    i.e. should storing a post generate the post id or should we do it ourselves?\r\n\r\n    i think we should generate it, could there be problems with that? (it seems a bit more \"go style\" to do it ourselves, because the storage backend should just store, not generate things. but i'm still not entirely sure.)\r\n- with the above design, adding users would result in new methods...",
		"created": "2015-03-04T16:38:44.958490933+01:00"
	},
	{
		"id": "8d182373c04316b42a433bb63be69014",
		"title": "Sanity check",
		"content": "## *Aka* let's see what we can do here...\r\n\r\nWe allow inline elements, like \u003ca href=\"/\"\u003ethis \u003cem\u003eshiny\u003c/em\u003e link\u003c/a\u003e, which even has an `em` element in it.\r\n\r\nWe also allow embedding images, at least I hope so, because we **need** kittens!\r\n\r\n\u003cimg src=\"http://www.helpinganimals.org/wp-content/uploads/2014/09/kitten_19023.jpg\" width=\"600px\" /\u003e\r\n\r\nWe also allow `iframe`s, even though we probably should restrict them to youtube and vimeo.\r\n\r\n\u003ciframe width=\"600\" height=\"400\" src=\"https://www.youtube.com/embed/598IdFlOXcQ\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e",
		"created": "2015-03-04T14:03:45.384663865+01:00"
	},
	{
		"id": "558371d54ced7614a8df578ae654de05",
		"title": "Extract templates from main.go",
		"content": "- in a seperate package `templates`\r\n- each template goes into a separate file, e.g. `templates/post_new.go`\r\n\r\n\r\n    ```go\r\n    // templates/post_new.go\r\n    package templates\r\n    \r\n    import (...)\r\n    \r\n    var postNewTemplate = `\r\n    YAY!\r\n    `\r\n    ```\r\n\r\n- we collect *all* templates in `templates/main.go`, which exports **one** variable with templates\r\n\r\n\r\n    ```go\r\n    // templates/main.go\r\n    package templates\r\n    \r\n    import (...)\r\n    \r\n    var templateFuncs = template.FuncMap{}\r\n    \r\n    var Template = template.New(\"\").Funcs(templateFuncs)\r\n\r\n    Template.New(\"post.new\").Parse(newPostTemplate)\r\n    ```",
		"created": "2015-03-04T13:27:20.851740984+01:00"
	},
	{
		"id": "3f6de12f8af172b7b52c017f4d0ce971",
		"title": "Maybe?",
		"content": "## Let's start with a heading...\r\n\r\nWriting some meaningful prose, and then, for *very* dramatic effect -- a list:\r\n\r\n * one\r\n * two\r\n * three\r\n\r\nWill that work? And even more adventurous, does *the following* work?\r\n\r\n1. that\r\n2. would\r\n3. be\r\n4. ***awesome!!1!***",
		"created": "2015-03-04T12:26:41.409624027+01:00"
	},
	{
		"id": "f02d5a77c0f4a4953b856e5397df3d01",
		"title": "Next up",
		"content": "- ~~list support (c'mon blackfriday)~~ (it wasn't blackfriday, but materialize)\r\n- users (including ldap)\r\n- pluggable storage backends\r\n- tests!\r\n- markdown preview (either live or tabbed)\r\n- cancel new post/edit\r\n- mathjax support\r\n- css *blingbling* :)",
		"created": "2015-03-04T12:01:55.115207523+01:00"
	},
	{
		"id": "8f04a5ad262b2bba34240303a920c87d",
		"title": "another change, another post.",
		"content": "an idea: why don't we use `gol` for editing/posting our changelog?",
		"created": "2015-03-03T18:53:46.707429592+01:00"
	},
	{
		"id": "5",
		"title": "Hello C!",
		"content": "```C\r\nint main() {\r\n     return 0;\r\n}\r\n```\r\n\r\nCan we do stuff now?\r\n\r\nIt seems that we can?!",
		"created": "2015-03-03T14:30:47.061273279+01:00"
	},
	{
		"id": "4",
		"title": "Hey, this is getting quite ... usable?",
		"content": "",
		"created": "2015-03-03T14:28:09.655798222+01:00"
	},
	{
		"id": "3",
		"title": "Another post...",
		"content": "Well, \"hello\" is getting old, what about **HELLO!!!!!!!11!!!**?\r\n\r\nAh, that's much nicer!\r\n\r\n(!!!!!!1!!)\r\n\r\nNow for something else...\r\n\r\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/jcEws7il4EY\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e",
		"created": "2015-03-03T13:53:17.693708955+01:00"
	},
	{
		"id": "2",
		"title": "Let's see where this ends up...!",
		"content": "Should be in the middle.",
		"created": "2015-03-03T13:40:01.265284209+01:00"
	},
	{
		"id": "1",
		"title": "Tadum!",
		"content": "Hello again... (with time???)",
		"created": "2015-03-03T13:36:01.265284209+01:00"
	}
]